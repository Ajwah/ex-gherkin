{"gherkinDocument":{"feature":{"location":{"line":1,"column":1},"language":"en","keyword":"Feature","name":"Exception in AfterStep Block","description":"  In order to use custom assertions at the end of each step\n  As a developer\n  I want exceptions raised in AfterStep blocks to be handled gracefully and reported by the formatters","children":[{"background":{"id":"3","location":{"line":6,"column":3},"keyword":"Background","steps":[{"location":{"line":7,"column":5},"keyword":"Given ","text":"the standard step definitions","id":"0"},{"location":{"line":8,"column":5},"keyword":"And ","text":"a file named \"features/step_definitions/naughty_steps.rb\" with:","docString":{"location":{"line":9,"column":7},"content":"Given /^this step does something naughty$/ do x=1\n  @naughty = true\nend","delimiter":"\"\"\""},"id":"1"},{"location":{"line":14,"column":5},"keyword":"And ","text":"a file named \"features/support/env.rb\" with:","docString":{"location":{"line":15,"column":7},"content":"class NaughtyStepException \u003c Exception; end\nAfterStep do\n  if @naughty\n    raise NaughtyStepException.new(\"This step has been very very naughty\")\n  end\nend","delimiter":"\"\"\""},"id":"2"}]}},{"scenario":{"id":"8","tags":[{"location":{"line":24,"column":3},"name":"@todo-windows","id":"7"}],"location":{"line":25,"column":3},"keyword":"Scenario","name":"Handle Exception in standard scenario step and carry on","steps":[{"location":{"line":26,"column":5},"keyword":"Given ","text":"a file named \"features/naughty_step_in_scenario.feature\" with:","docString":{"location":{"line":27,"column":7},"content":"Feature: Sample\n\n  Scenario: Naughty Step\n    Given this step does something naughty\n\n  Scenario: Success\n    Given this step passes","delimiter":"\"\"\""},"id":"4"},{"location":{"line":36,"column":5},"keyword":"When ","text":"I run `cucumber features`","id":"5"},{"location":{"line":37,"column":5},"keyword":"Then ","text":"it should fail with:","docString":{"location":{"line":38,"column":7},"content":"Feature: Sample\n\n  Scenario: Naughty Step                   # features/naughty_step_in_scenario.feature:3\n    Given this step does something naughty # features/step_definitions/naughty_steps.rb:1\n      This step has been very very naughty (NaughtyStepException)\n      ./features/support/env.rb:4:in `AfterStep'\n      features/naughty_step_in_scenario.feature:4:in `Given this step does something naughty'\n\n  Scenario: Success        # features/naughty_step_in_scenario.feature:6\n    Given this step passes # features/step_definitions/steps.rb:1\n\nFailing Scenarios:\ncucumber features/naughty_step_in_scenario.feature:3 # Scenario: Naughty Step\n\n2 scenarios (1 failed, 1 passed)\n2 steps (2 passed)\n","delimiter":"\"\"\""},"id":"6"}]}},{"scenario":{"id":"13","tags":[{"location":{"line":58,"column":3},"name":"@todo-windows","id":"12"}],"location":{"line":59,"column":3},"keyword":"Scenario","name":"Handle Exception in scenario outline table row and carry on","steps":[{"location":{"line":60,"column":5},"keyword":"Given ","text":"a file named \"features/naughty_step_in_scenario_outline.feature\" with:","docString":{"location":{"line":61,"column":7},"content":"Feature: Sample\n\n  Scenario Outline: Naughty Step\n    Given this step \u003cMight Work\u003e\n\n    Examples:\n    | Might Work             |\n    | passes                 |\n    | does something naughty |\n    | passes                 |\n\n  Scenario: Success\n    Given this step passes\n","delimiter":"\"\"\""},"id":"9"},{"location":{"line":77,"column":5},"keyword":"When ","text":"I run `cucumber features`","id":"10"},{"location":{"line":78,"column":5},"keyword":"Then ","text":"it should fail with:","docString":{"location":{"line":79,"column":7},"content":"Feature: Sample\n\n  Scenario Outline: Naughty Step # features/naughty_step_in_scenario_outline.feature:3\n    Given this step \u003cMight Work\u003e # features/naughty_step_in_scenario_outline.feature:4\n\n    Examples:\n      | Might Work             |\n      | passes                 |\n      | does something naughty |\n      This step has been very very naughty (NaughtyStepException)\n      ./features/support/env.rb:4:in `AfterStep'\n      features/naughty_step_in_scenario_outline.feature:9:in `Given this step does something naughty'\n      features/naughty_step_in_scenario_outline.feature:4:in `Given this step \u003cMight Work\u003e'\n      | passes                 |\n\n  Scenario: Success        # features/naughty_step_in_scenario_outline.feature:12\n    Given this step passes # features/step_definitions/steps.rb:1\n\nFailing Scenarios:\ncucumber features/naughty_step_in_scenario_outline.feature:9 # Scenario Outline: Naughty Step, Examples (#2)\n\n4 scenarios (1 failed, 3 passed)\n4 steps (4 passed)\n","delimiter":"\"\"\""},"id":"11"}]}}]},"uri":"/Users/kevinjohnson/projects/ex_gherkin/test/support/testdata/full_features/exception_in_after_step_hook.feature"}}
