{"gherkinDocument":{"uri":"/Users/kevinjohnson/projects/ex_gherkin/test/support/testdata/full_features/exceptions_in_around_hooks.feature","feature":{"location":{"line":1,"column":1},"language":"en","keyword":"Feature","name":"Exceptions in Around Hooks","description":"  Around hooks are awkward beasts to handle internally.\n\n  Right now, if there's an error in your Around hook before you call `block.call`,\n  we won't even print the steps for the scenario.\n\n  This is because that `block.call` invokes all the logic that would tell Cucumber's\n  UI about the steps in your scenario. If we never reach that code, we'll never be\n  told about them.\n\n  There's another scenario to consider, where the exception occurs after the steps\n  have been run. How would we want to report in that case?","children":[{"scenario":{"location":{"line":16,"column":3},"tags":[{"location":{"line":15,"column":3},"name":"@todo-windows","id":"5"}],"keyword":"Scenario","name":"Exception before the test case is run","steps":[{"location":{"line":17,"column":5},"keyword":"Given ","text":"the standard step definitions","id":"0"},{"location":{"line":18,"column":5},"keyword":"And ","text":"a file named \"features/support/env.rb\" with:","docString":{"location":{"line":19,"column":7},"content":"Around do |scenario, block|\n  fail \"this should be reported\"\n  block.call\nend","delimiter":"\"\"\""},"id":"1"},{"location":{"line":25,"column":5},"keyword":"And ","text":"a file named \"features/test.feature\" with:","docString":{"location":{"line":26,"column":7},"content":"Feature:\n  Scenario:\n    Given this step passes","delimiter":"\"\"\""},"id":"2"},{"location":{"line":31,"column":5},"keyword":"When ","text":"I run `cucumber -q`","id":"3"},{"location":{"line":32,"column":5},"keyword":"Then ","text":"it should fail with exactly:","docString":{"location":{"line":33,"column":7},"content":"Feature:\n\n  Scenario:\n  this should be reported (RuntimeError)\n  ./features/support/env.rb:2:in `Around'\n\nFailing Scenarios:\ncucumber features/test.feature:2\n\n1 scenario (1 failed)\n0 steps\n","delimiter":"\"\"\""},"id":"4"}],"id":"6"}},{"scenario":{"location":{"line":49,"column":3},"tags":[{"location":{"line":48,"column":3},"name":"@todo-windows","id":"12"}],"keyword":"Scenario","name":"Exception after the test case is run","steps":[{"location":{"line":50,"column":5},"keyword":"Given ","text":"the standard step definitions","id":"7"},{"location":{"line":51,"column":5},"keyword":"And ","text":"a file named \"features/support/env.rb\" with:","docString":{"location":{"line":52,"column":7},"content":"Around do |scenario, block|\n  block.call\n  fail \"this should be reported\"\nend","delimiter":"\"\"\""},"id":"8"},{"location":{"line":58,"column":5},"keyword":"And ","text":"a file named \"features/test.feature\" with:","docString":{"location":{"line":59,"column":7},"content":"Feature:\n  Scenario:\n    Given this step passes","delimiter":"\"\"\""},"id":"9"},{"location":{"line":64,"column":5},"keyword":"When ","text":"I run `cucumber -q`","id":"10"},{"location":{"line":65,"column":5},"keyword":"Then ","text":"it should fail with exactly:","docString":{"location":{"line":66,"column":7},"content":"Feature:\n\n  Scenario:\n    Given this step passes\n      this should be reported (RuntimeError)\n      ./features/support/env.rb:3:in `Around'\n\nFailing Scenarios:\ncucumber features/test.feature:2\n\n1 scenario (1 failed)\n1 step (1 passed)\n","delimiter":"\"\"\""},"id":"11"}],"id":"13"}}]}}}
